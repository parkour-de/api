#%RAML 1.0
title: DPV API
description: API to get data about DPV
version: '1.0'
baseUri: http://localhost:8080/
mediaType: application/json
types:
  KeyResponse: !include types/keyResponse.raml
  Page: !include types/page.raml
  Location: !include types/location.raml
  LocationDTO: !include types/locationDTO.raml
  LocationsRequest: !include types/locationsRequest.raml
  Training: !include types/training.raml
  TrainingDTO: !include types/trainingDTO.raml
  TrainingsRequest: !include types/trainingsRequest.raml
  TotpConfiguration: !include types/totpConfiguration.raml
  TotpEnableRequest: !include types/totpEnableRequest.raml
  User: !include types/user.raml
  UsersRequest: !include types/usersRequest.raml
  Description: !include types/description.raml
  Descriptions:
    description: Descriptions using languages, e.g. de as key
    properties:
      /.*/: Description
  Cycle: !include types/cycle.raml
  Comment: !include types/comment.raml
  Photo: !include types/photo.raml
/api:
  /version:
    get:
      description: Returns the version of the API - the only endpoint that does not use JSON-formatted response, i.e. no quotes around version string
      responses:
        '200':
          description: OK
          body:
            type: string
            example: "42"
  /admin:
    /pages:
      post:
        body: Page
        responses:
          '200':
            description: OK
            body: KeyResponse
      put:
        body: Page
        responses:
          '200':
            description: OK
            body: KeyResponse
      '/{key}':
        delete:
          responses:
            '200':
              description: OK
              body: KeyResponse
        get:
          responses:
            '200':
              description: OK
              body: Page
        uriParameters:
          key:
            description: key of the item to be retrieved
            type: string
    /locations:
      post:
        body: Location
        responses:
          '200':
            description: OK
            body: KeyResponse
      put:
        body: Location
        responses:
          '200':
            description: OK
            body: KeyResponse
      '/{key}':
        delete:
          responses:
            '200':
              description: OK
              body: KeyResponse
        get:
          responses:
            '200':
              description: OK
              body: Location
        uriParameters:
          key:
            description: id of the item to be retrieved
            type: string
    /trainings:
      post:
        body: Training
        responses:
          '200':
            description: OK
            body: KeyResponse
      put:
        body: Training
        responses:
          '200':
            description: OK
            body: KeyResponse
      '/{key}':
        delete:
          responses:
            '200':
              description: OK
              body: KeyResponse
        get:
          responses:
            '200':
              description: OK
              body: Training
        uriParameters:
          key:
            description: key of the item to be retrieved
            type: string
    /users:
      post:
        body: User
        responses:
          '200':
            description: OK
            body: KeyResponse
      put:
        body: User
        responses:
          '200':
            description: OK
            body: KeyResponse
      '/{key}':
        delete:
          responses:
            '200':
              description: OK
              body: KeyResponse
        get:
          responses:
            '200':
              description: OK
              body: User
        uriParameters:
          key:
            description: key of the item to be retrieved
            type: string
  /facebook:
    get:
      description: |-
        Takes the authorization header from the browser and generates an access token for a user
        Request an OAuth token from https://www.facebook.com/v17.0/dialog/oauth, then call this endpoint
        using Authorization: facebook mySuperSecretToken as a header. This endpoint will then make a debug
        call to Facebook Graph API to extract a unique ID that can be attached to a user.
      responses:
        '200':
          description: OK
  /pages:
    get:
      description: Returns a list of pages.
      responses:
        '200':
          description: OK
          body: Page[]
  /locations:
    get:
      description: Returns a list of locations.
      responses:
        '200':
          description: OK
          body: LocationDTO[]
      queryString:
        type: LocationsRequest
  /trainings:
    get:
      description: Returns a list of trainings.
      responses:
        '200':
          description: OK
          body: TrainingDTO[]
      queryString:
        type: TrainingsRequest
  /users:
    get:
      description: Returns a list of users.
      responses:
        '200':
          description: OK
          body: User[]
      queryString:
        type: UsersRequest
    '/{key}':
      '/exists':
        get:
          responses:
            '200':
              description: OK
              body:
                type: boolean
                example: true
      '/claim':
        post:
          responses:
            '200':
              description: OK
      '/facebook':
        get:
          responses:
            '200':
              description: OK
              body:
                type: string
                example: "f:johndoe:1700000000:eyI_In0"
          queryString:
            properties:
              auth:
                description: Facebook auth token
                type: string
      '/password':
        get:
          responses:
            '200':
              description: OK
              body:
                type: string
                example: "p:johndoe:1700000000:eyI_In0"
          queryString:
            properties:
              password: string
      '/totp':
        get:
          responses:
            '200':
              description: OK
              body: TotpConfiguration
        post:
          body: TotpEnableRequest
          responses:
            '200':
              description: OK
      '/{email}':
        get:
          responses:
            '200':
              description: OK
        uriParameters:
          email:
            description: email to be configured
            type: string
        '/{login}':
          get:
            responses:
              '200':
                description: OK
                body:
                  type: string
                  example: "e:johndoe:1700000000:eyI_In0"
            queryString:
              properties:
                code: string
          uriParameters:
            login:
              description: login to be configured
              type: string
      uriParameters:
        key:
          description: key of the item to be retrieved
          type: string
